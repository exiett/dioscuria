/* --------------------
Font: Nimbus Mono PS
-------------------- */
@font-face {
    font-family: "Nimbus Mono PS";
    src: url('fonts/NimbusMonoPS-Regular.woff2') format('woff2'),
         url('fonts/NimbusMonoPS-Regular.woff') format('woff');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

/* --------------------
Theme Variables
-------------------- */
:root {
    --width: 720px;
    --font-main: 'Nimbus Mono PS', monospace;
    --font-secondary: 'Nimbus Mono PS', monospace;
    --font-scale: 1em;

    /* Matrix Colors */
    --background-color: #020000;
    --heading-color: #7ffac1;     /* Brighter matrix green for headings */
    --text-color: #5efaac;        /* Matrix green for text */
    --terminal-green: #5efaac;    /* Matrix green */
    --link-color: #5efaac;        /* Matrix green for links */
    --visited-color: #3ea77a;     /* Darker matrix green for visited */

    /* Code & Blockquote */
    --code-background-color: #020000;
    --code-color: #5efaac;
    --blockquote-color: #5efaac;
    --glitch-intensity: 1;
}

/* --------------------
Base Styles
-------------------- */
html {
cursor: default;
}

body {
    font-family: var(--font-secondary);
    font-size: var(--font-scale);
    margin: auto;
    padding: 20px;
    max-width: var(--width);
    text-align: left;
    background-color: var(--background-color);
    word-wrap: break-word;
    overflow-wrap: break-word;
    line-height: 1.5;
    /* Subtle glow effect on all text */
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.8);
    filter: contrast(85%) brightness(50%);  /* Based on theme params */
    text-shadow: 
        0.5px 0 0 rgba(255, 0, 0, 0.0522),
        -0.5px 0 0 rgba(0, 255, 0, 0.0522),
        0 0.5px 0 rgba(0, 0, 255, 0.0522);
    position: relative;  /* Create stacking context */
}

@media (min-width: 768px) {
  body {
    animation: crtWobble 10s infinite linear;
  }
}

@keyframes crtWobble {
  0% { transform: translateX(0px); }
  50% { transform: translateX(0.5px); }
  100% { transform: translateX(0px); }
}

/* Headings */
h1, h2, h3, h4, h5, h6 {
font-family: var(--font-main);
color: var(--heading-color);
text-shadow: 0 0 5px rgba(255,255,255,0.8);
}

/* Blog title */
.title h1 {
    font-size: 1em;
    padding: 5px 10px;
    color: var(--heading-color);
    display: inline-block;
    font-weight: 400;
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.8);
    transition: all 0.3s ease;
}

/* Blinking terminal after title */
.title h1::after {
  content: "▋";
  margin-left: 5px;
  animation: cursorBlink 1s infinite;
}

@keyframes cursorBlink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

.title:hover h1 {
    color: #020000;
    -webkit-text-stroke: 1px #5efaac;
    text-stroke: 1px #5efaac;
    animation: navBlink 1s infinite;
    text-decoration: none;
}

/* Paragraph tag color */
p { 
  color: var(--text-color);
  -webkit-font-smoothing: antialiased; /* Smoother text */
  text-shadow: 
    0 0 8px rgba(94, 250, 172, 0.3), /* Stronger green glow */
    0 0 2px rgba(255, 255, 255, 0.2);
}

/* Links: Matrix green with white glow */
a {
    color: var(--link-color);
    cursor: pointer;
    text-decoration: underline;
    transition: all 0.3s ease;
    /* Glitch Effect Base */
    position: relative;
    display: inline-block;
    text-shadow: none; /* Disable default glow during glitch */
}

a:hover {
    animation: textShake 0.3s infinite;
    color: var(--terminal-green); 
}

a::before,
a::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: transparent;
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
}

a::before { 
    color: #ff00ff;
    animation: glitchShift1 0.3s infinite;
}
  
a::after { 
    color: #00ffff;
    animation: glitchShift2 0.3s infinite; 
}
  
a:hover::before,
a:hover::after {
    visibility: visible;
    opacity: 1;
}

/* Main Content Box: white border */
main {
margin-top: 40px;
margin-bottom: 20px;
padding: 30px;
border: 1px solid var(--heading-color);
line-height: 1.6;
box-shadow: 
    0 0 10px rgba(94, 250, 172, 0.1),
    0 0 20px rgba(94, 250, 172, 0.1),
    0 0 30px rgba(94, 250, 172, 0.1),
    0 0 40px rgba(94, 250, 172, 0.1);
position: relative;
z-index: 1;  /* Place content above the CRT effect */
background: transparent;  /* Ensure background is transparent */
}

/* Bold text: bright amber for emphasis */
strong, b {
    color: #FFB000;  /* Bright amber */
    text-shadow: 0 0 5px rgba(255, 176, 0, 0.7);  /* Subtle amber glow */
}

/* --------------------
Buttons
-------------------- */
/* White background, black text, turn green on hover */
button, a.button {
background-color: #5efaac;
color: #020000;
border: 1px solid #5efaac;
margin: 0;
padding: 10px 20px;
cursor: pointer;
transition: box-shadow 0.3s ease-in-out, background-color 0.3s ease-in-out;
text-decoration: none; /* for <a class="button"> usage */
}
button:hover, a.button:hover {
background-color: #7ffac1;
color: #020000;
animation: blinkGlow 1s infinite;
box-shadow: 0 0 20px #5efaac;
}

/* Navigation links in the header */
nav {
    padding: 10px 0;
    margin-bottom: 20px;
}

nav a {
    color: var(--heading-color);
    text-decoration: none;
    padding: 8px 15px;
    margin-right: 8px;  /* keeping your existing margin */
    transition: all 0.3s ease;
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.8);
    position: relative;
}

nav a:hover {
    color: #020000;
    -webkit-text-stroke: 1px #5efaac;
    text-stroke: 1px #5efaac;
    animation: navBlink 1s infinite;
}

@keyframes navBlink {
    0%, 100% { text-shadow: 0 0 5px #5efaac; }
    50% { text-shadow: 0 0 15px #5efaac; }
}

/* Tables, HR, Images */
table {
width: 100%;
border-collapse: collapse;
}
table, th, td {
border: 1px dashed var(--heading-color);
padding: 10px;
}
hr {
border: 0;
border-top: 1px dashed;
}
img {
max-width: 100%;
}

/* Code Blocks */
code {
font-family: var(--font-main);
padding: 2px;
background-color: var(--code-background-color);
color: var(--code-color);
border: 1px solid var(--text-color);
border-radius: 3px;
}

/* Blockquotes */
blockquote {
border-top: 1px solid var(--heading-color);
border-bottom: 1px solid var(--heading-color);
color: var(--blockquote-color);
padding: 20px;
font-style: italic;
margin-left: 0;
margin-right: 0;
}

/* Footer */
footer {
padding: 25px 0;
text-align: center;
opacity: 0.6;
color: #555; text-shadow: none;
}

/* Title Styles (Bear Blog's .title class) */
.title:hover {
text-decoration: none;
}

/* Inline Elements */
.inline {
width: auto !important;
}

/* Highlighted Code Blocks */
.highlight, .code {
padding: 1px 15px;
background-color: var(--code-background-color);
color: var(--code-color);
border: 1px solid var(--text-color);
border-radius: 3px;
margin-block-start: 1em;
margin-block-end: 1em;
overflow-x: auto;
}

.highlight {
  position: relative;
  border: 1px solid var(--heading-color);
  margin: 20px 0;
}

.highlight::before {
  content: "◯ ◯ ◯";
  position: absolute;
  top: -25px;
  left: 10px;
  color: var(--heading-color);
  font-size: 0.8em;
}

/* Blog Post List */
ul.blog-posts {
list-style-type: none;
padding: unset;
}
ul.blog-posts li {
display: flex;
margin-bottom: 20px;
}
ul.blog-posts li time {
    font-style: normal;
    color: rgba(255, 255, 255, 0.8);
}
ul.blog-posts li span {
flex: 0 0 130px;
}
ul.blog-posts li a:visited {
color: var(--visited-color);
}

/* Responsive Adjustments */
@media only screen and (max-width:767px) {
main {
 padding: 20px;
 margin-top: 30px;
 margin-bottom: 10px;
}
ul.blog-posts li {
 flex-direction: column;
}
ul.blog-posts li span {
 flex: unset;
}
}

/* --------------------
CRT Scanline Effect
-------------------- */
/* Base layer for CRT effect */
html::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        rgba(2, 0, 0, 0) 50%, 
        rgba(94, 250, 172, 0.025) 50%
    ), linear-gradient(
        90deg,
        rgba(94, 250, 172, 0.06),
        rgba(94, 250, 172, 0.02),
        rgba(94, 250, 172, 0.06)
    );
    background-size: 100% 2px, 3px 100%;
    pointer-events: none;
    z-index: -2;  /* Place behind content */
    mix-blend-mode: screen;
}

@keyframes flicker {
    0% { opacity: 0.92; }
    25% { opacity: 0.96; }
    50% { opacity: 0.93; }
    75% { opacity: 0.95; }
    100% { opacity: 0.92; }
}

/* Flicker effect layer */
html::after {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(2, 0, 0, 0.1);
    opacity: 0;
    pointer-events: none;
    z-index: -1;  /* Place behind content but above scanlines */
    animation: flicker 0.15s infinite;
    mix-blend-mode: overlay;
    background: linear-gradient(
    rgba(255, 0, 0, 0.05),
    rgba(0, 255, 0, 0.05),
    rgba(0, 0, 255, 0.05)
  );
}

/* --------------------
Button Hover: Blinking & Glowing
-------------------- */
@keyframes blinkGlow {
0%, 100% { box-shadow: 0 0 10px #5efaac; }
50% { box-shadow: 0 0 20px #5efaac; }
}

/* --------------------
Home Page Layout
-------------------- */
.home-wrapper {
    max-width: 800px;      /* or whatever width you want */
    margin: 40px auto;     /* centers the wrapper itself */
    padding: 0 20px;
    display: flex;
    flex-direction: column;  /* So we can stack .profile-row, hr, and .buttons vertically */
    align-items: center;     /* horizontally center them if needed */
  }

.profile-row {
  display: flex;          /* side-by-side layout for pic and text */
  gap: 20px;
  width: 100%;            /* so it spans the .home-wrapper */
  align-items: center;
}

.center-hr {
    width: 80%;             /* or 100%, or whatever you like */
    margin: 20px auto;      /* center horizontally */
    border: 1px solid #ccc; /* or dashed, etc. */
}



.profile-container {
    position: relative;
    flex: 0 0 200px; /* Fixed width for profile container */
    height: 200px;
    aspect-ratio: 1 / 1;
}

.text-content {
    flex: 1; /* Takes up remaining space */
    min-width: 0; /* Allows text to wrap */
}

.profile-container img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 10px;
    object-fit: cover;
    transition: opacity 0.3s ease;
}

.profile-container .hover {
    opacity: 0;
}

.profile-container:hover .hover {
    opacity: 1;
}

.profile-container:hover .static {
    opacity: 0;
}

/* Horizontal line spacing */
hr {
    border: none;
    border-top: 1px solid #ccc;
    margin: 20px 0;
}

/* Buttons section */
.buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin: 20px 0;
    flex-wrap: wrap; /* Prevents clipping */
    max-width: calc(100% - 40px); /* Account for parent padding */
}

.buttons a {
    background-color: #fff;
    color: #000;
    border: 1px solid #fff;
    margin: 0;
    padding: 10px 20px;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    border-radius: 8px; /* Rounded corners */
    min-width: 120px; /* Minimum width to prevent tiny buttons */
    text-align: center;
    flex: 0 1 auto; /* Allow button to shrink if needed */
}

.buttons a:hover {
    background-color: var(--terminal-green);
    color: #000; /* Black text on green background */
    box-shadow: 0 0 20px var(--terminal-green);
}

/* Responsive adjustments for smaller screens */
@media only screen and (max-width: 600px) {
    .home-wrapper {
        flex-direction: column;
        align-items: center;
        padding: 0 10px;
    }

    .profile-container {
        flex: 0 0 150px; /* Slightly smaller on mobile */
        height: 150px;
        margin-bottom: 20px;
    }

    .text-content {
        width: 100%;
    }

    .buttons {
        flex-direction: column;
        width: 100%;
        max-width: 100%; /* Full width on mobile */
    }

    .buttons a {
        width: 100%;
        margin: 5px 0; /* Add vertical spacing between buttons */
    }
}

/* Selection color */
::selection {
    background: rgba(255, 255, 255, 0.9);  /* Almost white background */
    color: var(--background-color);         /* Dark text */
    text-shadow: none;                      /* Remove text shadow for better readability */
}

/* For Firefox */
::-moz-selection {
    background: rgba(255, 255, 255, 0.9);
    color: var(--background-color);
    text-shadow: none;
}

.upvote-button {
    color: rgba(255, 255, 255, 0.8);
  }

.upvote-button svg {
    fill: rgba(255, 255, 255, 0.8);
}

::marker {
    color: rgba(255, 255, 255, 0.8);
  }

/* --------------------
Glowing List Items
-------------------- */
ul, ol {
  /* Remove default padding to align bullets with text */
  padding-left: 1.5em !important; 
}

ul li, 
ol li {
  color: var(--text-color) !important; /* Enforce green text */
  margin-bottom: 0.8em; /* Spacing between items */
  position: relative;
  text-shadow: 0 0 8px rgba(94, 250, 172, 0.3); /* Matrix glow */
}

/* Custom glowing bullets for unordered lists */
ul li::before {
  content: "■"; /* Terminal-style square */
  color: var(--terminal-green);
  position: absolute;
  left: -1.5em;
  text-shadow: 0 0 10px var(--terminal-green);
  font-size: 0.8em;
}

/* Glowing numbers for ordered lists */
ol {
  counter-reset: terminal-counter;
}
ol li {
  counter-increment: terminal-counter;
}
ol li::before {
  content: counter(terminal-counter) ". ";
  color: var(--terminal-green);
  position: absolute;
  left: -1.5em;
  text-shadow: 0 0 10px var(--terminal-green);
}

/* --------------------
Upvote Button - Tron Core
-------------------- */
button.upvote-button {
  /* Base style */
  background: transparent !important;
  color: var(--terminal-green) !important;
  border: 1px solid var(--terminal-green);
  border-radius: 0 !important; /* Harsh terminal edges */
  padding: 8px 15px;
  cursor: pointer;
  position: relative;
  transition: all 0.3s ease;
  
  /* Glow effects */
  box-shadow: 
    0 0 10px var(--terminal-green),
    inset 0 0 5px var(--terminal-green);
  text-shadow: 0 0 10px var(--terminal-green);

  /* CRT distortion */
  transform: skew(-2deg);
}

/* Hover: Activate laser core */
button.upvote-button:hover {
  animation: 
    buttonGlitch 0.3s infinite,
    reactorPulse 1s infinite;
  background: rgba(94, 250, 172, 0.1) !important;
  box-shadow: 
    0 0 20px var(--terminal-green),
    inset 0 0 10px var(--terminal-green);
}

/* SVG icon inside button - make it radioactive */
button.upvote-button svg {
  fill: var(--terminal-green) !important;
  filter: drop-shadow(0 0 5px var(--terminal-green));
  transition: transform 0.3s ease;
}

/* Hover animation for SVG */
button.upvote-button:hover svg {
  transform: scale(1.2) rotate(10deg);
}

/* Keyframes for maximum cyberpunk */
@keyframes buttonGlitch {
  0% { transform: skew(-2deg) translate(0); }
  20% { transform: skew(-3deg) translate(-1px, 1px); }
  40% { transform: skew(0deg) translate(1px, -1px); }
  60% { transform: skew(-2deg) translate(-1px, -1px); }
  80% { transform: skew(2deg) translate(1px, 1px); }
  100% { transform: skew(-2deg) translate(0); }
}

@keyframes reactorPulse {
  0% { opacity: 0.8; }
  50% { opacity: 1; }
  100% { opacity: 0.8; }
}

/* ====================
JS-EFFECTS-REQUIRED.CSS 
==================== */

/* --------------------
Glitch Link Essentials
-------------------- */
a::before,
a::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: transparent;
  visibility: hidden;
  opacity: 0;
}

a::before { color: #ff00ff; } /* Magenta glitch layer */
a::after { color: #00ffff; } /* Cyan glitch layer */

/* --------------------
Konami Code Easter Egg 
-------------------- */
.konami-mode {
  --heading-color: #ffb000 !important;
  --text-color: #ffb000 !important;
  --link-color: #ffb000 !important;
  filter: hue-rotate(-50deg);
}

/* --------------------
Required Animations
-------------------- */
@keyframes glitchShift1 {
  0% { clip-path: inset(10% 0 80% 0); transform: translate(calc(-2px * var(--glitch-intensity))); }
  20% { clip-path: inset(30% 0 10% 0); transform: translate(calc(3px * var(--glitch-intensity))); }
  40% { clip-path: inset(50% 0 30% 0); transform: translate(calc(-3px * var(--glitch-intensity))); }
  60% { clip-path: inset(20% 0 60% 0); transform: translate(calc(1px * var(--glitch-intensity))); }
  80% { clip-path: inset(70% 0 10% 0); transform: translate(calc(-1px * var(--glitch-intensity))); }
  100% { clip-path: inset(0); transform: translate(0); }
}

@keyframes glitchShift2 {
  0% { clip-path: inset(80% 0 10% 0); transform: translate(calc(2px * var(--glitch-intensity))); }
  20% { clip-path: inset(10% 0 30% 0); transform: translate(calc(-3px * var(--glitch-intensity))); }
  40% { clip-path: inset(30% 0 50% 0); transform: translate(calc(3px * var(--glitch-intensity))); }
  60% { clip-path: inset(60% 0 20% 0); transform: translate(calc(-1px * var(--glitch-intensity))); }
  80% { clip-path: inset(10% 0 70% 0); transform: translate(calc(1px * var(--glitch-intensity))); }
  100% { clip-path: inset(0); transform: translate(0); }
}

@keyframes textShake {
  0% { transform: translate(0); }
  25% { transform: translate(-1px, 1px); }
  50% { transform: translate(1px, -1px); }
  75% { transform: translate(-1px, -1px); }
  100% { transform: translate(1px, 1px); }
}